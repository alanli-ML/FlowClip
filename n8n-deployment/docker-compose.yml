version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: flowclip-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Basic Configuration
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_ADMIN_PASSWORD}
      
      # Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
      
      # Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - WEBHOOK_URL=${WEBHOOK_URL}
      
      # Timezone
      - TZ=${TZ}
      
      # Enable community nodes
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
      
      # Workflow settings
      - N8N_WORKFLOW_TIMEOUT=300
      - N8N_LOG_LEVEL=info
      
      # Security headers
      - N8N_SECURE_COOKIE=false
      
    volumes:
      - n8n_data:/home/node/.n8n
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - flowclip-n8n

  postgres:
    image: postgres:13
    container_name: flowclip-n8n-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - flowclip-n8n

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local

networks:
  flowclip-n8n:
    driver: bridge
